# docker-compose -f ./DC_vigie_test.yml up -d

version: "3.7"
services:

  # Docker image to forward all traffic to the docker host
  # http://dockerhost:9100 will forward trafic to host:9100
  # Used for Prometheus to pull data from a running Vigie.
  dockerhost:
    container_name: VIGIE-CI_dockerhost
    image: qoomon/docker-host
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    restart: "no"

  vigiehost:
    container_name: VIGIE-CI_vigiehost
    image: qoomon/docker-host
    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
    restart: "no"

  # ----------------------------------------------------------------------------------------
  #  MONITORING
  # ----------------------------------------------------------------------------------------

  prometheus:
    # https://hub.docker.com/r/prom/prometheus/tags
    container_name: VIGIE-CI_prometheus
    image: prom/prometheus:v2.44.0
    restart: "no"
    ports:
      - "9090"
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--storage.tsdb.retention=8h'
      - '--web.enable-remote-write-receiver' # accept remote write requests from other Prometheus servers .. Otel ?
      - '--enable-feature=exemplar-storage' # Exemplars are references to data outside of the MetricSet
      - '--config.file=/etc/prometheus/prometheus.yml'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prom.localhost`)"
      - "traefik.http.routers.prometheus.entrypoints=web"

  grafana:
    # https://hub.docker.com/r/grafana/grafana/tags
    container_name: VIGIE-CI_grafana
    image: grafana/grafana:10.0.0-ubuntu
    restart: "no"
    ports:
      - "3000"
    links:
      - prometheus
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - ./configs/graf/provisioning/:/etc/grafana/provisioning/:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`graf.localhost`)"
      - "traefik.http.routers.grafana.entrypoints=web"
    external_links:
      - loc:traefik

  # https://github.com/grafana/tempo/blob/main/example/docker-compose/otel-collector/docker-compose.yaml
  # https://github.com/grafana/tempo/releases
  tempo:
    image: grafana/tempo:latest
    container_name: VIGIE-CI_tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./configs/tempo/local.yaml:/etc/tempo.yaml
      - /tmp/tempo-data:/tmp/tempo
    ports:
      - "14268" # jaeger ingest
      - "3200"  # tempo api for grafana
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"  # zipkin

  jaeger:
    container_name: VIGIE-CI_jaeger
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "5775:5775"
      - "5778:5778"
      - "6831:6831"
      - "6832:6832"
      - "9411:9411"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jaeger.rule=Host(`jag.localhost`)"
      - "traefik.http.routers.jaeger.entrypoints=web"
      - "traefik.http.services.jaeger.loadbalancer.server.port=16686"

  otel-collector:
    # https://github.com/open-telemetry/opentelemetry-collector-contrib/releases
    image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.69.0
    command: [ "--config=/etc/otel-collector-config.yml" ]
    volumes:
      - ./configs/otel_collector/config.yml:/etc/otel-collector-config.yml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "9411"   # Zipkin receiver
      - "55679:55679" # zpages extension
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
      - "30080:30080"


  # ----------------------------------------------------------------------------------------
  #  PULSAR
  # ----------------------------------------------------------------------------------------
  #
  # https://hub.docker.com/r/apachepulsar/pulsar

  pulsar:
    image: apachepulsar/pulsar:3.0.0
    container_name: VIGIE-CI_pulsar
    restart: "no"
    entrypoint: bin/pulsar
    command:
      - standalone
    ports:
      - "8080:8080"
      - "6650:6650"
    volumes:
      - ./configs/pulsar_worker:/pulsar_worker/conf
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pulsar.rule=Host(`pulsar.localhost`)"
      - "traefik.http.routers.pulsar.entrypoints=web"

  pulsar-manager:
    image: apachepulsar/pulsar-manager:v0.3.0
    container_name: VIGIE-CI_pulsar-manager
    restart: "no"
    environment:
      SPRING_CONFIGURATION_FILE: /pulsar-manager/pulsar-manager/application.properties
    ports:
      - "9527:9527"
      - "7750:7750"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pulsar-manager.rule=Host(`pulsar-manager.localhost`)"
      - "traefik.http.routers.pulsar-manager.entrypoints=web"

  # ----------------------------------------------------------------------------------------
  #  CockroachDB
  # ----------------------------------------------------------------------------------------
  #
  # https://hub.docker.com/r/cockroachdb/cockroach/tags

  cockroachdb:
    image: cockroachdb/cockroach:latest-v21.2
    container_name: VIGIE-CI_cockroach

    ports:
      - "8080"
      - "26257:26257"
    command: start-single-node --insecure
    volumes:
      - ./configs/sql:/tmp/init
    #      - "${PWD}/cockroach-data/crdb:/cockroach/cockroach-data"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cockroachdb.rule=Host(`cdb.localhost`)"
      - "traefik.http.routers.cockroachdb.entrypoints=web"

  # ----------------------------------------------------------------------------------------
  #  Yugabyte
  # ----------------------------------------------------------------------------------------
  #
  # https://registry.hub.docker.com/r/yugabytedb/yugabyte
  # https://github.com/yugabyte/yugabyte-db/releases

  yugabyte:
    image: yugabytedb/yugabyte:2.13.1.0-b112
    container_name: VIGIE-CI_yugabyte

    ports:
      - "7000"
      - "9000:9000"
      - "5433:5433"
      - "9042:9042"
    command: bin/yugabyted start --base_dir=/home/yugabyte/yb_data --daemon=false
    #volumes:
    #  - ./configs/sql:/tmp/init
    #      - "~/yb_data:/home/yugabyte/yb_data"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.yugabyte.rule=Host(`yb.localhost`)"
      - "traefik.http.routers.yugabyte.entrypoints=web"
      - "traefik.http.services.yugabyte.loadbalancer.server.port=7000"
  #      - "traefik.http.routers.yugabyte-ts.rule=Host(`yb-ts.localhost`)"
  #      - "traefik.http.routers.yugabyte-ts.entrypoints=web"
  #      - "traefik.http.services.yugabyte-ts.loadbalancer.server.port=9000"

  # ---------------------------------------------------
  # Helpers
  # ---------------------------------------------------

  traefik:
    image: traefik:v2.9.6
    container_name: "VIGIE-CI_traefik"
    command:
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "1080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.http.routers.dashboard.rule=Host(`traefik.localhost`) && (PathPrefix(`/webapi`) || PathPrefix(`/dashboard`))"


    # ----------------------------------------------------------------------------------------
    #  ZOOKEEPER
    # ----------------------------------------------------------------------------------------

  zoo1:
    image: zookeeper:3.8
    container_name: VIGIE-CI_zoo1
    restart: always
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181

  zoo2:
    image: zookeeper:3.8
    container_name: VIGIE-CI_zoo2
    restart: always
    hostname: zoo2
    ports:
      - "2182:2181"
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181

  zoo3:
    image: zookeeper:3.8
    container_name: VIGIE-CI_zoo3
    restart: always
    hostname: zoo3
    ports:
      - "2183:2181"
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181

    # ----------------------------------------------------------------------------------------
    #  ETCD
    # ----------------------------------------------------------------------------------------

  etcd1:
   image: quay.io/coreos/etcd:v3.5
   container_name: VIGIE-CI_etcd1
   restart: "no"
   ports:
     - 2379:2379
     - 2380:2380
     - 23791:2379
     - 23801:2380
   environment:
     ETCD_NAME: node1
     ETCD_DATA_DIR: /etcd-data/etcd1.etcd
     ETCDCTL_API: 3
     ETCD_DEBUG: 1
     ETCD_INITIAL_ADVERTISE_PEER_URLS: http://etcd1:2380
     ETCD_INITIAL_CLUSTER: node3=http://etcd3:2380,node1=http://etcd1:2380,node2=http://etcd2:2380
     ETCD_INITIAL_CLUSTER_STATE: new
     ETCD_INITIAL_CLUSTER_TOKEN: webapi-etcd
     ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
     ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
     ETCD_ADVERTISE_CLIENT_URLS: http://etcd1:2379
  
  etcd2:
   image: quay.io/coreos/etcd:v3.5
   container_name: VIGIE-CI_etcd2
   restart: "no"
   ports:
     - 23792:2379
     - 23802:2380
   environment:
     ETCD_NAME: node2
     ETCD_DATA_DIR: /etcd-data/etcd2.etcd
     ETCDCTL_API: 3
     ETCD_DEBUG: 1
     ETCD_INITIAL_ADVERTISE_PEER_URLS: http://etcd2:2380
     ETCD_INITIAL_CLUSTER: node3=http://etcd3:2380,node1=http://etcd1:2380,node2=http://etcd2:2380
     ETCD_INITIAL_CLUSTER_STATE: new
     ETCD_INITIAL_CLUSTER_TOKEN: webapi-etcd
     ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
     ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
     ETCD_ADVERTISE_CLIENT_URLS: http://etcd2:2379
  
  etcd3:
   image: quay.io/coreos/etcd:v3.5
   container_name: VIGIE-CI_etcd3
   restart: "no"
   ports:
     - 23793:2379
     - 23803:2380
   environment:
     ETCD_NAME: node3
     ETCD_DATA_DIR: /etcd-data/etcd3.etcd
     ETCDCTL_API: 3
     ETCD_DEBUG: 1
     ETCD_INITIAL_ADVERTISE_PEER_URLS: http://etcd3:2380
     ETCD_INITIAL_CLUSTER: node3=http://etcd3:2380,node1=http://etcd1:2380,node2=http://etcd2:2380
     ETCD_INITIAL_CLUSTER_STATE: new
     ETCD_INITIAL_CLUSTER_TOKEN: webapi-etcd
     ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
     ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
     ETCD_ADVERTISE_CLIENT_URLS: http://etcd3:2379

