vigieAPI = 0.5
# Environment of execution
# Must always be production. A dev env will expose go metrics and slow your Vigie.
# environement = "production"
environment = "production"

###########################
# Git
###########################

[git]
  # Import Tests and Variables from a Git Repo
  # Vigie will clone this repo, then import it as usual
  # by adding the destination in [testfiles].included
  # Git clone is without the repo parent name folder
  
  # Enable the clone
  # Default : false
  # Format :  bool
  clone = true
  # Repo link
  # Default : ""
  # Format : "https://domain.tld/repo"
  repo = "https://github.com/Vincoll/vigie-demo-test"
  # Destination path  of the cloned repo 
  # Default : "/tmp/vigie"
  # Format :  "string"
  path = "/tmp/vigie"

###########################
# Testfiles
###########################

[testfiles]
  # Paths List of testfiles
  # Searching for files is done in depth.
  # Dir path and file path are both valid
  # Default : [""]
  # Format ["string", "string", ...]
  included = ["/tmp/vigie/test/"]

  # Paths or files to exclude (can be contained in included path)
  # Default : [""]
  # Format ["string", "string", ...]
  excluded = [""]

###########################
# Variables
###########################

[variables]
  # Paths List of variables files
  # Searching for files is done in depth.
  # Dir path and file path are both valid
  # Default : [""]
  # Format ["string", "string", ...]
  included = ["/tmp/vigie/var/"]

###########################
# API config
###########################

[api]
  # Activate the API
  # Default : true
  # Format : bool
  enable = true
  # API exposed port
  # Default : 80
  # Format : int 
  port = 6680

###########################
# Log config
###########################

[log]
  # Activate the log through stdout
  # Default : true
  # Format : bool
  stdout = true
  # Log into a file
  # Default : false
  # Format : bool
  logfile = false
  # Log level
  # Default : info
  # Valid values : "info","warn","error",debug,"trace"
  level = "info"
  # File to write logs into
  # Default : ""
  # Format : string
  filePath = "/tmp/vigie.log"

###########################
# InfluxDB config
###########################

[influxdb]
  # Activate the write to influxDB
  # Default : false
  # Format : bool
  enable = false
  # Address of influxDB 
  # Default : ""
  # Format : "http://fqdn:port" 
  addr = "http://influxdb:8086"
  # InfluxDB user 
  # Default : ""
  # Format : string
  user = "user"
  # InfluxDB user password 
  # Default : ""
  # Format : string
  password = "user"
  # InfluxDB database 
  # Default : ""
  # Format : string
  database = "vigie"

###########################
# Alerting config
###########################

[alerting]
  # Activate the built-in alerting of Vigie
  # Default : false
  # Format : bool
  enable = true
  # Interval at wich new errors are evaluted and trigger a notification (if any changes)
  # Default : "10s"
  # Format : duration string from rfc3339
  interval = "3s"
  # Reminder is an interval that necessarily triggers a notification describing the current state of the X Vigie state.
  # (Endorse also the function of DeadMenSwitch)
  # Default : "4h"
  # Format : duration string from rfc3339
  reminder = "4h"
  [alerting.email]
    # Recipient ot the alert
    # Default : ""
    # Format : "name@domain.tld"
    to = ""
    # Emitter of the alert
    # Default : ""
    # Format: "name@domain.tld"
    from = ""
    # SMTP username
    # Default : ""
    # Format: "string"
    username = ""
    # SMTP password
    # Default : ""
    # Format: "string"
    password = ""
    # SMTP fqdn
    # Default : ""
    # Format: "string"
    smtp  = ""
    # SMTP port
    # Default : 0
    # Format: int
    port = 25
  [alerting.discord]
    # Discord webhook
    # Default : ""
    # Format: "https://discordapp.com/api/webhooks/000000000000000/aaaaaazzzzzzz"
